
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: featureflags.terminus.infoblox.com
spec:
  additionalPrinterColumns:
  - JSONPath: .feature_id
    name: FeatureID
    type: string
  - JSONPath: .value
    name: Value
    type: string
  group: terminus.infoblox.com
  names:
    kind: FeatureFlag
    listKind: FeatureFlagList
    plural: featureflags
    singular: featureflag
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: FeatureFlag is the Schema for the applications API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: FeatureFlagSpec defines the desired state of FeatureFlag
          properties:
            featureID:
              description: FeatureID is the unique identifier of the feature
              type: string
            value:
              description: Value is the opaque data for the feature
              type: string
          required:
          - featureID
          - value
          type: object
        status:
          description: FeatureFlagStatus defines the observed state of FeatureFlag
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
