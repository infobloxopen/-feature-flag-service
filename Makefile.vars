PROJECT_ROOT            := github.com/Infoblox-CTO/atlas.feature.flag
BUILD_PATH              := bin
DOCKERFILE_PATH         := $(CURDIR)/build

# configuration for image names
USERNAME                := $(USER)
GIT_COMMIT              := $(shell git describe --dirty=-unsupported --always --tags || echo pre-commit)
IMAGE_VERSION           ?= $(GIT_COMMIT)
IMAGE_REGISTRY          ?= infobloxcto

IMAGE_NAME              ?= atlas.feature.flag
# configuration for server binary and image
SERVER_BINARY           := $(BUILD_PATH)/server
SERVER_PATH             := $(PROJECT_ROOT)/cmd/server
SERVER_IMAGE            := $(IMAGE_REGISTRY)/$(IMAGE_NAME)
SERVER_DOCKERFILE       := $(DOCKERFILE_PATH)/Dockerfile

# configuration for the protobuf gentool
SRCROOT_ON_HOST         := $(shell dirname $(abspath $(lastword $(MAKEFILE_LIST))))
SRCROOT_IN_CONTAINER    := /go/src/$(PROJECT_ROOT)
DOCKER_RUNNER           := docker run -u `id -u`:`id -g` --rm
DOCKER_RUNNER           += -v $(SRCROOT_ON_HOST):$(SRCROOT_IN_CONTAINER)
DOCKER_GENERATOR        := infoblox/atlas-gentool:v20
GENERATOR               := $(DOCKER_RUNNER) $(DOCKER_GENERATOR)

# configuration for building on host machine
GO_CACHE                := -pkgdir $(BUILD_PATH)/go-cache
GO_BUILD_FLAGS          ?= $(GO_CACHE) -i -v
GO_TEST_FLAGS           ?= -v -cover
GO_PACKAGES             := $(shell go list ./... | grep -v vendor)

# configuration for gateway
WITH_GATEWAY = true

# build manifest
DATE := $(shell date +"%Y%m%d%H%M%S")
BUILD_MANIFEST_JSON := {"Version":"$(IMAGE_VERSION)", "GitCommit":"$(GIT_COMMIT)", "Timestamp":"$(DATE)"}
GEN_BUILD_MANIFEST_JSON = echo '$(BUILD_MANIFEST_JSON)' > pkg/svc/build_manifest.json

# enable and hookup with right env vars (AWS, etc.) when helm is ready to import kubeconfig if needed
# aws configure does not with withAWS, needs work
#ifeq ($(AWS_ACCESS_KEY_ID),)
#export AWS_ACCESS_KEY_ID		:= $(shell aws configure get aws_access_key_id)
#endif
#ifeq ($(AWS_SECRET_ACCESS_KEY),)
#export AWS_SECRET_ACCESS_KEY	:= $(shell aws configure get aws_secret_access_key)
#endif
#ifeq ($(AWS_REGION),)
#export AWS_REGION				:= $(shell aws configure get region)
#endif
#HELM_IMAGE ?= infoblox/helm:2.14.3-1
#HELM ?= @docker run --entrypoint "" \
#	-v $(PWD):/pkg -w /pkg \
#	--net host \
#	-e AWS_ACCESS_KEY_ID \
#	-e AWS_SECRET_ACCESS_KEY \
#	-e AWS_REGION \
#	-v ${KUBECONFIG}:/root/.kube/config \
#	-v ~/.aws:/root/.aws \
#	${HELM_IMAGE}
#
#KUBECTL_IMAGE ?= infobloxcto/kubectl:1.12
#KUBECTL ?= docker run \
#	-w /pkg \
#	--net host \
#	-v ${PWD}:/pkg \
#	-v ${KUBECONFIG}:/root/.kube/config \
#	 ${KUBECTL_IMAGE}

export GOPRIVATE += ,github.com/Infoblox-CTO