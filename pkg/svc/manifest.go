package svc

import (
	"encoding/json"
	"github.com/sirupsen/logrus"
	"io/ioutil"
)

// BuildManifestJSONPath defines path of build_manifest.json.
// This path assumes the app Dockerfile sets the WORKDIR to
// dir containing build_manifest.json.
const BuildManifestJSONPath = "./build_manifest.json"

// BuildManifest defines structured contents of build_manifest.json
type BuildManifest struct {
	Version   string
	GitCommit string
	Timestamp string
}

var Manifest *BuildManifest

// DumpBuildManifest reads, parses, and dumps build_manifest.json to stdout.
// build_manifest.json is generated by the Makefile.
func DumpBuildManifest(appName string) {
	manifestBytes, err := ioutil.ReadFile(BuildManifestJSONPath)
	if err != nil {
		logrus.Errorf("Can't read %s: %s", BuildManifestJSONPath, err)
	} else {
		err = json.Unmarshal(manifestBytes, &Manifest)
		if err != nil {
			logrus.Errorf("Failed to json.Unmarshal(%s): %s", manifestBytes, err)
		} else {
			logrus.Printf("%s build manifest: %+v", appName, Manifest)
		}
	}
}
